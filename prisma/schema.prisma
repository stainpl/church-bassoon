datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String    @id @default(uuid())
  name           String
  email          String?   @unique
  phone          String?
  title          String?
  image          String?
  address        String?
  dateOfBirth    DateTime?
  passwordHash   String
  role           Role      @default(MEMBER)
  uniqueId       String    @unique @default(uuid())
  blogs          Blog[]
  payments       Payment[]
  createdAt      DateTime  @default(now())
  noticesAdded   Notice[]  @relation("NoticeAddedBy")
  noticesRemoved Notice[]  @relation("NoticeRemovedBy")
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String
  mediaUrl  String?
  mediaType String?
  createdAt DateTime @default(now())
}

model Blog {
  id         String   @id @default(uuid())
  title      String
  content    String
  youtubeUrl String?
  coverUrl   String?
  authorId   String
  authorUser User     @relation(fields: [authorId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Payment {
  id          String   @id @default(uuid())
  userId      String
  title       String
  description String
  amount      Float
  createdAt   DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

model Admin {
  id       String @id @default(uuid())
  email    String @unique
  password String
}

model Notice {
  id            String    @id @default(uuid())
  text          String
  addedBy       String
  addedByUser   User      @relation("NoticeAddedBy", fields: [addedBy], references: [id])
  removed       Boolean   @default(false)
  removedBy     String?
  removedByUser User?     @relation("NoticeRemovedBy", fields: [removedBy], references: [id])
  removedAt     DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

enum Role {
  ADMIN
  MEMBER
}
